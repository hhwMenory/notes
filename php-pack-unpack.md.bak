---
title: pack and unpack
category: php
date: 2017/02/28 13:38:16
---

### 写在前面的话

``` bash

    我最近突然想实现一下 rtmp 协议，但是在实现的 rtmp 协议的第一步“握手”时，发现自己面
    对着客户端发送的二进制数据包不知道怎么处理，感觉自己这方面的基础非常薄弱，所以决定恶补
    一下这方面的知识。

```

### 基本知识

#### 字节序

``` bash

    字节序是指多字节数据在计算机内存中存储或者网络传输时各字节的存储顺序，主要有两种方式：
    
        1. 大端序 big endian 
          
          高位字节排放在内存的低地址端即该值的起始地址，低位字节排放在内存的高地址端
          
        2. 小端序 little endian
        
          低位字节排放在内存的低地址端即该值的起始地址，高位字节排放在内存的高地址端  

    # 字节序 即大于一个字节类型的数据在内存中的存放顺序
    # 网络序 是 TCP/IP 中规定好的一种数据表示格式，采用大端序方式。

```

#### 高（低）地址

``` bash

    首先我们要知道内存大致是以这样的布局情况被程序使用的，具体如何可以查阅《UNXI网络编程》
    
        ---------------------  0xffffffff  最高内存地址
          系统内核
        ---------------------
          栈
        ---------------------
        
          自由区域
        
        ---------------------
          堆
        ---------------------
          未初始化的数据
                       数据段
          未初始化的数据
        ---------------------
          代码段
        ---------------------  0x00000000  最低内存地址

```

#### 高（低）字节

``` bash

    最高有效位指二进制中最高值的比特，即对整个序列取值影响最大的那个有效位。相反则为
    “最低有效位”，而高（低）字节，就是整个字节序列影响最大（小）的那个字节。
    
    网络字节序定义：
    
        收到的第一个字节被当作高位看待，这就要求发送端发送的第一个字节应当是高位。
        而在发送端发送数据时，发送的第一个字节是该数字在内存中起始地址对应的字节。
        可见多字节数值在发送前，在内存中数值应该以大端法存放。

```

<!-- more -->

### [php string](http://php.net/manual/zh/language.types.string.php#language.types.string.details)

``` bash

    PHP 中的 string 的实现方式是一个由字节组成的数组再加上一个整数指明缓冲区长度，即其中每个字符等同于一个字节。
    这个类型特性就决定一些返回非文本值的函数，仍会返回字符串，例如从网络套接字读取的二进制序列我们可以用 $str[0]
    的方式来读取一个字节的数据。
    
```

### pack

``` bash
    
    pack(format, ...arg) 数据装入一个二进制字符串

    # a and A
    
        - a 以 Nil（\0） 将字符串的空白填满
        - A 以 space 将字符串的空白填满
        
        eg：
            
            var_dump(pack("a10", "a"));
            var_dump(pack("A10", "a"));
            
            string(10) "a\0\0\0\0\0\0\0\0\0"
            string(10) "a         "
        
    # h and H
    
        - h 16进制字符串，低位在前以半字节为单位
        - H 16进制字符串，高位在前以半字节为单位
        
        var_dump($bin = pack("h3", 1023)); // 0x0102
        // ---- 0001
        // 0000 0001 ===> 01
        // ---- 0002
        // 0000 0002 ===> 02
        var_dump($bin = pack("H3", 1023)); // 0x1020
        // 0001 ----
        // 0001 0000 ===> 10
        // 0002 ----
        // 0002 0000 ===> 20
    
    # c and C
    
        - c 有符号字符
        - C 无符号字符
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
```

<!--



-->